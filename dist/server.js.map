{"version":3,"sources":["../src/server.js"],"names":["server","ApolloServer","typeDefs","resolvers","context","models","app","applyMiddleware","PORT","process","env","listen","port","console","log","graphqlPath"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAAEC,EAAAA,QAAQ,EAARA,kBAAF;AAAYC,EAAAA,SAAS,EAATA,qBAAZ;AAAuBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAANA;AAAF;AAAhC,CAAjB,CAAf;AACA,IAAMC,GAAG,GAAG,0BAAZ;AACAN,MAAM,CAACO,eAAP,CAAuB;AAAED,EAAAA,GAAG,EAAHA;AAAF,CAAvB;AAEA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAF,GAAG,CAACK,MAAJ,CAAW;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAAX,EAA2B;AAAA,SACzBK,OAAO,CAACC,GAAR,6DAAuDd,MAAM,CAACe,WAA9D,EADyB;AAAA,CAA3B","sourcesContent":["import express from \"express\";\nimport \"@babel/polyfill\";\nimport { ApolloServer } from \"apollo-server-express\";\nimport dotenv from \"dotenv\";\nimport typeDefs from \"./api/schema\";\nimport resolvers from \"./api/resolvers\";\nimport models from \"../models\";\n\nconst server = new ApolloServer({ typeDefs, resolvers, context: { models } });\nconst app = express();\nserver.applyMiddleware({ app });\n\nconst PORT = process.env.PORT || 4000;\napp.listen({ port: PORT }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n"],"file":"server.js"}